// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Poke.Data.Model;

#nullable disable

namespace Poke.MVC.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Poke.Data.Model.Avatar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Avatars");
                });

            modelBuilder.Entity("Poke.Data.Model.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BundleId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Poke.Data.Model.PokeBundle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PokeBundles");
                });

            modelBuilder.Entity("Poke.Data.Model.PokeBundleProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PokeBundleId")
                        .HasColumnType("int");

                    b.Property<int>("PokeProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PokeBundleId");

                    b.HasIndex("PokeProductId");

                    b.ToTable("PokeBundleProducts");
                });

            modelBuilder.Entity("Poke.Data.Model.PokeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PokeCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Generation"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Type"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Poke.Data.Model.PokeInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PokeInvoices");
                });

            modelBuilder.Entity("Poke.Data.Model.PokeProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("InBundle")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PokeProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InBundle = false,
                            Name = "Bulbasaur",
                            PokemonId = 1,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 2,
                            InBundle = false,
                            Name = "Charmander",
                            PokemonId = 4,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 3,
                            InBundle = false,
                            Name = "Squirtle",
                            PokemonId = 7,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 4,
                            InBundle = false,
                            Name = "Chikorita",
                            PokemonId = 152,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 5,
                            InBundle = false,
                            Name = "Cyndaquil",
                            PokemonId = 155,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 6,
                            InBundle = false,
                            Name = "Totodile",
                            PokemonId = 158,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 7,
                            InBundle = false,
                            Name = "Treecko",
                            PokemonId = 252,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 8,
                            InBundle = false,
                            Name = "Torchic",
                            PokemonId = 255,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 9,
                            InBundle = false,
                            Name = "Mudkip",
                            PokemonId = 258,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 10,
                            InBundle = false,
                            Name = "Turtwig",
                            PokemonId = 387,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 11,
                            InBundle = false,
                            Name = "Chimchar",
                            PokemonId = 390,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 12,
                            InBundle = false,
                            Name = "Piplup",
                            PokemonId = 393,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 13,
                            InBundle = false,
                            Name = "Snivy",
                            PokemonId = 495,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 14,
                            InBundle = false,
                            Name = "Tepig",
                            PokemonId = 498,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 15,
                            InBundle = false,
                            Name = "Oshawott",
                            PokemonId = 501,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 16,
                            InBundle = false,
                            Name = "Chespin",
                            PokemonId = 650,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 17,
                            InBundle = false,
                            Name = "Fennekin",
                            PokemonId = 653,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 18,
                            InBundle = false,
                            Name = "Froakie",
                            PokemonId = 656,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 19,
                            InBundle = false,
                            Name = "Rowlet",
                            PokemonId = 722,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 20,
                            InBundle = false,
                            Name = "Litten",
                            PokemonId = 725,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 21,
                            InBundle = false,
                            Name = "Popplio",
                            PokemonId = 728,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 22,
                            InBundle = false,
                            Name = "Grookey",
                            PokemonId = 810,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 23,
                            InBundle = false,
                            Name = "Scorbunny",
                            PokemonId = 813,
                            Price = 2500,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 24,
                            InBundle = false,
                            Name = "Sobble",
                            PokemonId = 816,
                            Price = 2500,
                            Quantity = 50
                        });
                });

            modelBuilder.Entity("Poke.Data.Model.PokeProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PokeProductId")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PokeProductId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("PokeProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PokeProductId = 1,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            PokeProductId = 1,
                            SubCategoryId = 20
                        },
                        new
                        {
                            Id = 3,
                            PokeProductId = 1,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 4,
                            PokeProductId = 1,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 5,
                            PokeProductId = 2,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 6,
                            PokeProductId = 2,
                            SubCategoryId = 18
                        },
                        new
                        {
                            Id = 7,
                            PokeProductId = 2,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 8,
                            PokeProductId = 3,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 9,
                            PokeProductId = 3,
                            SubCategoryId = 19
                        },
                        new
                        {
                            Id = 10,
                            PokeProductId = 3,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 11,
                            PokeProductId = 4,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 12,
                            PokeProductId = 4,
                            SubCategoryId = 20
                        },
                        new
                        {
                            Id = 13,
                            PokeProductId = 4,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 14,
                            PokeProductId = 5,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 15,
                            PokeProductId = 5,
                            SubCategoryId = 18
                        },
                        new
                        {
                            Id = 16,
                            PokeProductId = 5,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 17,
                            PokeProductId = 6,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 18,
                            PokeProductId = 6,
                            SubCategoryId = 19
                        },
                        new
                        {
                            Id = 19,
                            PokeProductId = 6,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 20,
                            PokeProductId = 7,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 21,
                            PokeProductId = 7,
                            SubCategoryId = 20
                        },
                        new
                        {
                            Id = 22,
                            PokeProductId = 7,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 23,
                            PokeProductId = 8,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 24,
                            PokeProductId = 8,
                            SubCategoryId = 18
                        },
                        new
                        {
                            Id = 25,
                            PokeProductId = 8,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 26,
                            PokeProductId = 9,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 27,
                            PokeProductId = 9,
                            SubCategoryId = 19
                        },
                        new
                        {
                            Id = 28,
                            PokeProductId = 9,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 29,
                            PokeProductId = 10,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 30,
                            PokeProductId = 10,
                            SubCategoryId = 20
                        },
                        new
                        {
                            Id = 31,
                            PokeProductId = 10,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 32,
                            PokeProductId = 11,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 33,
                            PokeProductId = 11,
                            SubCategoryId = 18
                        },
                        new
                        {
                            Id = 34,
                            PokeProductId = 11,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 35,
                            PokeProductId = 12,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 36,
                            PokeProductId = 12,
                            SubCategoryId = 19
                        },
                        new
                        {
                            Id = 37,
                            PokeProductId = 12,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 38,
                            PokeProductId = 13,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 39,
                            PokeProductId = 13,
                            SubCategoryId = 20
                        },
                        new
                        {
                            Id = 40,
                            PokeProductId = 13,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 41,
                            PokeProductId = 14,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 42,
                            PokeProductId = 14,
                            SubCategoryId = 18
                        },
                        new
                        {
                            Id = 43,
                            PokeProductId = 14,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 44,
                            PokeProductId = 15,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 45,
                            PokeProductId = 15,
                            SubCategoryId = 19
                        },
                        new
                        {
                            Id = 46,
                            PokeProductId = 15,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 47,
                            PokeProductId = 16,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 48,
                            PokeProductId = 16,
                            SubCategoryId = 20
                        },
                        new
                        {
                            Id = 49,
                            PokeProductId = 16,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 50,
                            PokeProductId = 17,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 51,
                            PokeProductId = 17,
                            SubCategoryId = 18
                        },
                        new
                        {
                            Id = 52,
                            PokeProductId = 17,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 53,
                            PokeProductId = 18,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 54,
                            PokeProductId = 18,
                            SubCategoryId = 19
                        },
                        new
                        {
                            Id = 55,
                            PokeProductId = 18,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 56,
                            PokeProductId = 19,
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 57,
                            PokeProductId = 19,
                            SubCategoryId = 20
                        },
                        new
                        {
                            Id = 58,
                            PokeProductId = 19,
                            SubCategoryId = 11
                        },
                        new
                        {
                            Id = 59,
                            PokeProductId = 19,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 60,
                            PokeProductId = 20,
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 61,
                            PokeProductId = 20,
                            SubCategoryId = 18
                        },
                        new
                        {
                            Id = 62,
                            PokeProductId = 20,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 63,
                            PokeProductId = 21,
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 64,
                            PokeProductId = 21,
                            SubCategoryId = 19
                        },
                        new
                        {
                            Id = 65,
                            PokeProductId = 21,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 66,
                            PokeProductId = 22,
                            SubCategoryId = 8
                        },
                        new
                        {
                            Id = 67,
                            PokeProductId = 22,
                            SubCategoryId = 20
                        },
                        new
                        {
                            Id = 68,
                            PokeProductId = 22,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 69,
                            PokeProductId = 23,
                            SubCategoryId = 8
                        },
                        new
                        {
                            Id = 70,
                            PokeProductId = 23,
                            SubCategoryId = 18
                        },
                        new
                        {
                            Id = 71,
                            PokeProductId = 23,
                            SubCategoryId = 27
                        },
                        new
                        {
                            Id = 72,
                            PokeProductId = 24,
                            SubCategoryId = 8
                        },
                        new
                        {
                            Id = 73,
                            PokeProductId = 24,
                            SubCategoryId = 19
                        },
                        new
                        {
                            Id = 74,
                            PokeProductId = 24,
                            SubCategoryId = 27
                        });
                });

            modelBuilder.Entity("Poke.Data.Model.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PokeCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PokeCategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gen. 1",
                            PokeCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gen. 2",
                            PokeCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Gen. 3",
                            PokeCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Gen. 4",
                            PokeCategoryId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Gen. 5",
                            PokeCategoryId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Gen. 6",
                            PokeCategoryId = 1
                        },
                        new
                        {
                            Id = 7,
                            Name = "Gen. 7",
                            PokeCategoryId = 1
                        },
                        new
                        {
                            Id = 8,
                            Name = "Gen. 8",
                            PokeCategoryId = 1
                        },
                        new
                        {
                            Id = 9,
                            Name = "normal",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 10,
                            Name = "fighting",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 11,
                            Name = "flying",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 12,
                            Name = "poison",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 13,
                            Name = "ground",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 14,
                            Name = "rock",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 15,
                            Name = "bug",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 16,
                            Name = "ghost",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 17,
                            Name = "steel",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 18,
                            Name = "fire",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 19,
                            Name = "water",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 20,
                            Name = "grass",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 21,
                            Name = "electric",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 22,
                            Name = "psychic",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 23,
                            Name = "ice",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 24,
                            Name = "dragon",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 25,
                            Name = "dark",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 26,
                            Name = "fairy",
                            PokeCategoryId = 2
                        },
                        new
                        {
                            Id = 27,
                            Name = "Starter",
                            PokeCategoryId = 3
                        },
                        new
                        {
                            Id = 28,
                            Name = "Legendary",
                            PokeCategoryId = 3
                        },
                        new
                        {
                            Id = 29,
                            Name = "Mythical",
                            PokeCategoryId = 3
                        },
                        new
                        {
                            Id = 30,
                            Name = "Baby",
                            PokeCategoryId = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Poke.Data.Model.OrderItem", b =>
                {
                    b.HasOne("Poke.Data.Model.PokeInvoice", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Poke.Data.Model.PokeBundleProduct", b =>
                {
                    b.HasOne("Poke.Data.Model.PokeBundle", "PokeBundle")
                        .WithMany()
                        .HasForeignKey("PokeBundleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Poke.Data.Model.PokeProduct", "PokeProduct")
                        .WithMany()
                        .HasForeignKey("PokeProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PokeBundle");

                    b.Navigation("PokeProduct");
                });

            modelBuilder.Entity("Poke.Data.Model.PokeProductCategory", b =>
                {
                    b.HasOne("Poke.Data.Model.PokeProduct", "PokeProduct")
                        .WithMany()
                        .HasForeignKey("PokeProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Poke.Data.Model.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PokeProduct");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Poke.Data.Model.SubCategory", b =>
                {
                    b.HasOne("Poke.Data.Model.PokeCategory", "PokeCategory")
                        .WithMany()
                        .HasForeignKey("PokeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PokeCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
